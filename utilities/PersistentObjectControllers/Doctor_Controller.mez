unit Doctor_Controller;
string msg;

Doctor[] getAllDoctorCollection(){
	return Doctor:all();
}

int getAllDoctorCollectionLength(){
	Doctor[] doctorCollection = getAllDoctorCollection();
	return doctorCollection.length();
}

bool isObjectValidState(datetime dateRegistered, string doctorID, Person person_Record){
	if(PrimitiveValidation:isValidString(doctorID, true, "No doctorID populated") == false){ return false; }
	if(person_Record == null){
		msg = "No person_Record populated."; Alert:error(msg);
		return false;
	}
	if(dateRegistered == null){
		msg = "No dateRegistered populated."; Alert:error(msg);
		return false;
	}
	return true;
}

Doctor createDoctor(datetime dateRegistered, string doctorID, Person person_Record){
	Doctor doctor_var = Doctor:new();
	return updateDoctor(doctor_var, false, dateRegistered, doctorID, person_Record);
}

Doctor updateDoctor(Doctor doctor_var, bool isEdit, datetime dateRegistered, string doctorID, Person person_Record){
	if (doctor_var == null || isObjectValidState(dateRegistered, doctorID, person_Record) == false){
		return;
	}

	doctor_var.dateRegistered = dateRegistered;
	doctor_var.doctorID = doctorID;
	doctor_var.person = person_Record;
	doctor_var.save();

	return doctor_var;
}

void deleteDoctor(Doctor doctor_var){
	if(doctor_var == null) { return; }
	doctor_var.removeRole();
	Doctor:delete(doctor_var);
}

void generateDoctorData(){
	createDoctor(Mez:now(), "doctorID", null);
}

