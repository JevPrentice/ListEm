unit Doctor_Form;

Doctor selected_doctor_var;

datetime dateRegistered;
string doctorID;
Person person_Record;
Payment[] payments_doctor_Collection;

string msg;
string nav_back;
string nav_success;
string page_mode;

void init(){
	if (selected_doctor_var == null){
		clearState();
	} else {
		editDoctor();
	}
}

void clearState(){
	msg = "";
	page_mode = "Create";
	selected_doctor_var = null;
	dateRegistered = null;
	doctorID = null;

	person_Record = null;
	payments_doctor_Collection = null;
}

string navigate(string location){
	clearState();
	return location;
}

string backButton(){
	return navigate(nav_back);
}

string submitButton(){
	bool isEdit; if (page_mode == "Create"){ isEdit = false; } else { isEdit = true; }
	if (selected_doctor_var != null){
		Doctor_Controller:updateDoctor(selected_doctor_var, isEdit, dateRegistered, doctorID, person_Record);
	} else {
		Doctor_Controller:createDoctor(dateRegistered, doctorID, person_Record);
	}
	clearState();
	return null;
}

void editDoctor(){
	page_mode = "Edit";
	dateRegistered = selected_doctor_var.dateRegistered;
	doctorID = selected_doctor_var.doctorID;
	person_Record = selected_doctor_var.person;
	payments_doctor_Collection = selected_doctor_var.payments_doctor;
}

void deleteDoctor(){
	Doctor_Controller:deleteDoctor(selected_doctor_var);
}

void cancelButton(){
	clearState();
}

void generateData(){
	Doctor_Controller:generateDoctorData();
}
