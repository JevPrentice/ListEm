unit SubTopicOrderManagement;

UmbrellaTopicSetupTable subTopicOrder;
UmbrellaTopicSetupTable[] subTopicOrders;

Umbrella topicFilter;
Topic subTopicFilter;

string message;

string nav_return;

void init() {

	message = "";
	nav_return = "nav_sub_topic_order_management";
	resetViewCollections();

	if ( (topicFilter != null && subTopicFilter != null) || (topicFilter == null && subTopicFilter == null) ){
		subTopicOrders = SubTopicOrderController:getAllSubTopicOrders();
		topicFilter = null;
		subTopicFilter = null;
	} else if (topicFilter != null && subTopicFilter == null){
		subTopicOrders = SubTopicOrderController:getSubTopicOrdersForTopic(topicFilter);	
	} else if (topicFilter == null && subTopicFilter != null){
		subTopicOrders = SubTopicOrderController:getSubTopicOrdersForSubTopic(subTopicFilter);
	}
}

string createSubTopicOrder(){
	SubTopicOrderEdit:subTopicOrder = null;
	removeFilters();
	nav_return = "nav_sub_topic_order_edit";
	return navigate();
}

string editSubTopicOrder(){
	SubTopicOrderEdit:subTopicOrder = subTopicOrder;
	nav_return = "nav_sub_topic_order_edit";
	return navigate();
}

string editSubTopic(){
	SubTopicEdit:topic = subTopicOrder.umbrella_UmbrellaUserSetup;
	SubTopicEdit:subTopicOrder = subTopicOrder;
	SubTopicEdit:subTopic = subTopicOrder.topic_UmbrellaUserSetup;
	SubTopicEdit:nav_return = "nav_sub_topic_order_management";
	nav_return = "nav_sub_topic_edit";
	return navigate();
}

void deleteSubTopicOrder(){

	if (subTopicOrder == null){
		message = "SubTopic Order not be found";
   		Alerter:alert(message);
		return null;
	}

	UmbrellaTopicSetupTable:delete(subTopicOrder);
	message = "Sub-Topic Order deleted";
    Alerter:alert(message);
	return init();
}

string viewSequenceOrders(){

	Topic subTopic = subTopicOrder.topic_UmbrellaUserSetup;
	SequenceOrder[] sequenceOrders = SequenceOrderController:getSequenceOrdersForSubTopic(subTopic);
	
	if (sequenceOrders.length() < 1){
		message = "There are no Sequence Orders associated to this SubTopic Order";
   		Alerter:alert(message);
		return null;
	}
	
	SequenceOrderManagement:subTopicFilter = subTopic;

	nav_return = "nav_sequence_orders";
	return navigate();
}

string viewTopics(){

	Umbrella topic = subTopicOrder.umbrella_UmbrellaUserSetup;

	if (topic == null){
		message = "There are no Topics associated to this SubTopic Order";
   		Alerter:alert(message);
		return null;
	}

	TopicManagement:topicFilter = topic;
	nav_return = "nav_manage_topics";
	return navigate();
}

string createAssociatedSequence(){
	SequenceEdit:subTopic = subTopicOrder.topic_UmbrellaUserSetup;
	nav_return = "create_associated_sequence";
	return navigate();
}

string nav_manage_topics(){
	nav_return = "nav_manage_topics";
	return navigate();
}

string nav_manage_subtopics(){
	nav_return = "nav_manage_subtopics";
	return navigate();
}

void removeFiltersButton(){
	removeFilters();
	init();
}

string navigate(){
	removeFilters();
	resetViewCollections();
	return nav_return;
}

void removeFilters(){
	subTopicFilter = null;
	topicFilter = null;
}

void resetViewCollections(){
	subTopicOrder = null;
	subTopicOrders = null;
}