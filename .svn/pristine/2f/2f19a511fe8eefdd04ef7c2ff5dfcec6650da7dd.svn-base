unit ActivityOrderEdit;

PatternOrder activityOrder;

Pattern activity;
Sequence sequence;

int orderNumber;

bool isEdit;

string msg;
string nav_return;

void init() {

	if (activityOrder == null){
		activityOrder = PatternOrder:new();
		isEdit = false;
		orderNumber = null;
	} else {
		activity = activityOrder.pattern_patternOrder;
		sequence = activityOrder.sequence_patternOrder;
		isEdit = true;
		orderNumber = activityOrder.patternOrder;
	}

	if (nav_return == null){
		nav_return = "nav_activity_order_management";
	}
	
}

void resetVars(){
	activityOrder = null;
	sequence = null;
	activity = null;
}

string saveActivityOrder() {

	if (activity == null){
		msg = "Please select an Activity";
   		Alerter:alert(msg);
   		return null;
	}	

	if (sequence == null){
		msg = "Please select a Sequence";
   		Alerter:alert(msg);
   		return null;
	}

	if (orderNumber == null || orderNumber <= 0){
		msg = "Please enter a ActivityOrder number which is a positive integer";
   		Alerter:alert(msg);
   		return null;
	}

	if (ActivityOrderController:isActivityOrderAssignedToSequence(sequence, orderNumber) == true){

		if (isEdit == true){
			if (orderNumber != activityOrder.patternOrder){
				msg = String:concat("The ActivityOrder number", orderNumber, " already exists, please enter a unique ActivityOrder number");
   				Alerter:alert(msg);
   				return null;
			}
		} else {
			msg = String:concat("Sequence ", sequence.sequenceID, " is already associated to the OrderNumber ", orderNumber, " please enter a unique order number");
   			Alerter:alert(msg);
   			return null;
		}
	}

	int existingOrderNumber = ActivityOrderController:getActivityOrderNumberForActivitySequence(activity, sequence);
	if (existingOrderNumber != 0 && isEdit == false){
		msg = String:concat("The Activity and Sequence are already connected with Sequence OrderNumber: ", orderNumber, " please enter a unique order number");
		Alerter:alert(msg);
		return null;
	}

	activityOrder.patternOrder = orderNumber;
	activityOrder.pattern_patternOrder = activity;
	activityOrder.sequence_patternOrder = sequence;

	activityOrder.save();
	
	msg = "Activity Order Saved";
    Alerter:alert(msg);

	return navigate();
}

string navigate(){

	if (nav_return == "nav_activity_order_management"){
		ActivityOrderManagement:sequenceFilter = sequence;
		ActivityOrderManagement:activityFilter = null;
	}

	resetVars();
	return nav_return;
}