unit SubTopicOrderTempContoller;

string message;

SubTopicOrderTemp[] getSubTopicOrderTempForSubTopicOrdersArray(UmbrellaTopicSetupTable[] subTopicOrders){
	
	SubTopicOrderTemp[] subTopicOrderTempArr;
	SubTopicOrderTemp subTopicOrderTemp;
	Umbrella topic;
	Topic subTopic;
	UmbrellaTopicSetupTable subTopicOrder;

	for(int i = 0; i < subTopicOrders.length(); i++){
		subTopicOrder = subTopicOrders.get(i);

		topic = subTopicOrder.umbrella_UmbrellaUserSetup;
		subTopic = subTopicOrder.topic_UmbrellaUserSetup;

		subTopicOrderTemp = getSubTopicOrderTempForTopicSubTopicSubTopicOrder(topic, subTopic, subTopicOrder);
		subTopicOrderTempArr.append(subTopicOrderTemp);
	}

	return subTopicOrderTempArr;
}

SubTopicOrderTemp[] getSubTopicOrderTempForSubTopic(Topic subTopic){
	SubTopicOrderTemp[] subTopicOrderTempArr;

	if (subTopic == null){
		return null;
	}

	Topic[] subTopics = SubTopicController:getSubTopicsForTopicID(subTopic.topicID);

	if (subTopics.length() < 1){
		return null;
	} 

	UmbrellaTopicSetupTable[] subTopicOrders = SubTopicOrderController:getSubTopicOrdersForSubTopic(subTopic);
	subTopicOrderTempArr = getSubTopicOrderTempForSubTopicOrdersArray(subTopicOrders);

	// for(int i = 0; i < subTopicOrders; i++){
	// 	subTopicOrder = subTopicOrders.get(i);

	// 	if (subTopicOrder != null){
	// 		topic = subTopicOrder.umbrella_UmbrellaUserSetup;	
	// 	}

	// 	

	// }

	// UmbrellaTopicSetupTable[] subTopicOrders;
	// UmbrellaTopicSetupTable subTopicOrder;

	Topic st;
	for(int i = 0; i < subTopics.length(); i++){
		st = subTopics.get(i);

		if (isElementInSubTopicOrderTempArray(st, subTopicOrderTempArr) == false){
			SubTopicOrderTemp subTopicOrderTemp = getSubTopicOrderTempForTopicSubTopicSubTopicOrder(null, st, null);
			subTopicOrderTempArr.append(subTopicOrderTemp);
		}
	}

	return subTopicOrderTempArr;
}

bool isElementInSubTopicOrderTempArray(Topic element, SubTopicOrderTemp[] subTopicOrderTempArr){

	if (element == null){
		return false;
	}

	SubTopicOrderTemp subTopicOrderTemp;
	for(int i = 0; i < subTopicOrderTempArr.length(); i++){
		subTopicOrderTemp = subTopicOrderTempArr.get(i);

		if (subTopicOrderTemp.subTopicID == element.topicID){
			return true;
		}
	}

	return false;
}

SubTopicOrderTemp getSubTopicOrderTempForTopicSubTopicSubTopicOrder(Umbrella topic, Topic subTopic, UmbrellaTopicSetupTable subTopicOrder){
	SubTopicOrderTemp subTopicOrderTemp = SubTopicOrderTemp:new();

	if (topic != null){
		subTopicOrderTemp.topicID = topic.umbrellaID;
		subTopicOrderTemp.topicName = topic.umbrellaName;
	} else {
		subTopicOrderTemp.topicID = "";
		subTopicOrderTemp.topicName = "";
	}

	if (subTopic != null){
		subTopicOrderTemp.subTopicID = subTopic.topicID;
		subTopicOrderTemp.subTopicName = subTopic.topicName;

		subTopicOrderTemp.subTopicStartSMS = subTopic.topicStartSMS;
		subTopicOrderTemp.subTopicEndSMS = subTopic.topicEndSMS;
		subTopicOrderTemp.subTopicReminderSMS = subTopic.topicReminderSMS;
		subTopicOrderTemp.subTopicReminderTime = subTopic.topicReminderTime;
		subTopicOrderTemp.subTopicEscalationTime = subTopic.topicEscalationTime;
		subTopicOrderTemp.subTopicMaxDuration = subTopic.topicMaxDuration;
		subTopicOrderTemp.subTopicType = subTopic.topicType;
		subTopicOrderTemp.subTopicFlags = subTopic.topicFlags;

		LanguageKeyObject languageKey = subTopic.topic_LanguageKey;

		if(languageKey != null){
			subTopicOrderTemp.language = String:concat(languageKey.languageID, " ",languageKey.language);	
		}
	} else {
		subTopicOrderTemp.subTopicID = "";
		subTopicOrderTemp.subTopicName = "";
		subTopicOrderTemp.subTopicStartSMS = "";
		subTopicOrderTemp.subTopicEndSMS = "";
		subTopicOrderTemp.subTopicReminderSMS = "";
		subTopicOrderTemp.subTopicReminderTime = 0;
		subTopicOrderTemp.subTopicEscalationTime = 0;
		subTopicOrderTemp.subTopicMaxDuration = 0;
		subTopicOrderTemp.subTopicType = 0;
		subTopicOrderTemp.subTopicFlags = "";
		subTopicOrderTemp.language = "";
	}

	if (subTopicOrder != null){
		subTopicOrderTemp.subTopicOrderNum = subTopicOrder.ordernum;
		subTopicOrderTemp.previousdate = subTopicOrder.previousdate;
		subTopicOrderTemp.fixeddate = subTopicOrder.fixeddate;
		subTopicOrderTemp.relativestartnum = subTopicOrder.relativestartnum;
		subTopicOrderTemp.dowstartnum = subTopicOrder.dowstartnum;
	} else {
		subTopicOrderTemp.subTopicOrderNum = 0;
		subTopicOrderTemp.previousdate = null;
		subTopicOrderTemp.fixeddate = null;
		subTopicOrderTemp.relativestartnum = 0;
		subTopicOrderTemp.dowstartnum = 0;
	}

	return subTopicOrderTemp;
}