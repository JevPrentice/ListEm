unit uCalculatePPEGroupUmbrella;

/* *********************************************************************** */
/* *********************************************************************** */

GroupUmbrellaPPE[] fReturnAllGroupUmbrellaPPE(){
	return GroupUmbrellaPPE:all();
}

/* *********************************************************************** */
/* *********************************************************************** */

GroupUmbrellaPPE[] getAllUpcomingGroupUmbrellaPPE(){
	
	datetime currentTime = Mez:now();
	datetime oneHourFromNow = Date:addSeconds(currentTime, 3600);

	GroupUmbrellaPPE[] allUpcoming = GroupUmbrellaPPE:between(groupUmbrellaStartDateTime, currentTime, oneHourFromNow);
	string msg = String:concat("uCalculatePPEGroupUmbrella:getAllUpcomingGroupUmbrellaPPE - There are ", allUpcoming.length(), " Groups starting a Topic in the next hour ( ",currentTime, " - " , oneHourFromNow," )");
    Logger:log(msg);

	return allUpcoming;
}

/* *********************************************************************** */
/* *********************************************************************** */

void fCreateOrUpdateGroupUmbrellaPPE (Client c, Umbrella u, datetime startdatein, datetime escalatedatein, datetime enddatein, int iForceUpdate){

	if(c==null||u==null){ return null; }

	GroupUmbrellaPPE gUPPE = fReturnGroupUmbrellaPPE (c, u); if(gUPPE==null){ return null; }

	int maxUsers = BLUnits:fGetConfigSettingInt("MaxUsersUpdateGroupUmbrellaPPE");

	/* ************************************************************** */

		if(escalatedatein==null){
			escalatedatein = UserGroupUmbrellaTimeCalculations:fGetUmbrellaDates(u, startdatein, null, null, "escalationdate");
			enddatein = UserGroupUmbrellaTimeCalculations:fGetUmbrellaDates(u, startdatein, null, null, "enddate");
		} 

	/* *************************************************************** */

	if(iForceUpdate==0){ gUPPE.totalUsers = gUPPE.totalUsers + 1; }

	if(gUPPE.status==0){ Mez:alert("GroupUmbrellaPPE.createconfirmation"); }

	if(gUPPE.totalUsers<=maxUsers || gUPPE.status==0 || iForceUpdate==1){
		gUPPE.status = 1;
		gUPPE.groupUmbrellaStartDateTime = startdatein;
		gUPPE.groupUmbrellaEscalateDateTime = escalatedatein;
		gUPPE.groupUmbrellaEndDateTime = enddatein;
		Mez:alert("GroupUmbrellaPPE.editconfirmation"); 
	}

	gUPPE.save();

}

/* *********************************************************************** */
/* *********************************************************************** */

GroupUmbrellaPPE fReturnGroupUmbrellaPPE (Client c, Umbrella u){

	ClientGroup cg = ClientGroupList:getGroupForClient(c); if(cg==null||u==null){ return null; }
	GroupUmbrellaPPE gUPPE = fGetMatchedGroupumbrellaPPE(cg, u);
	if(gUPPE==null){
		gUPPE = fCreateGroupumbrellaPPE (cg, u);
	}
	return gUPPE;

}

/* *********************************************************************** */
/* *********************************************************************** */

GroupUmbrellaPPE fGetMatchedGroupumbrellaPPE (ClientGroup cg, Umbrella u){

	GroupUmbrellaPPE[] gUPPEs = GroupUmbrellaPPE:and(relationshipIn(group_groupUmbrellaPPE, cg), relationshipIn(umbrella_groupUmbrellaPPE, u));
	GroupUmbrellaPPE gUPPE = null;
	if(gUPPEs.length()>0){
		gUPPEs.sortDesc("groupUmbrellaStartDateTime");
		gUPPE = gUPPEs.first();
	}

	return gUPPE;

}

/* *********************************************************************** */
/* *********************************************************************** */

GroupUmbrellaPPE fCreateGroupumbrellaPPE (ClientGroup cg, Umbrella u){

	GroupUmbrellaPPE gUPPE = GroupUmbrellaPPE:new();

    gUPPE.status = 0;
	gUPPE.duration = 0;
    gUPPE.flags = "";

    gUPPE.percomplete = 0;
    gUPPE.perinprogress = 0;
    gUPPE.perlate = 0;
    gUPPE.perexpired = 0;
	gUPPE.aveprogress = 0;
	gUPPE.avequizscore = 0;
	gUPPE.avechatscore = 0;
    gUPPE.avepracticumscore = 0;
    gUPPE.avetotalscore = 0;
    gUPPE.totalUsers = 0;

	gUPPE.groupUmbrellaStartDateTime = Mez:now();
	gUPPE.groupUmbrellaEscalateDateTime = Mez:now();
	gUPPE.groupUmbrellaEndDateTime = Mez:now();

	gUPPE.group_groupUmbrellaPPE = cg;
    gUPPE.umbrella_groupUmbrellaPPE = u;

	gUPPE.save();

	return gUPPE;

}