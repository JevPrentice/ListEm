unit InviteSmartChewsFromClients;

void inviteSmartChewsFromClients(){
	Client[] chews = UserController:getCHEWUsers();

	string msg = String:concat("Invite Smart CHEWs. There are ", chews.length(), " possible CHEWS to invite"); Logger:log(msg); Alerter:alert(msg);
	int successfullyProcessed = 0;

	for (int i = 0; i < chews.length(); i++){
		Client chew = chews.get(i);

		string name = UserController:getClientNames(chew);

		/* Invite on valid mobile */
		if (String:length(chew.mobileNumber) > 9 && 
				String:length(chew.mobileNumber) < 12 && 
				Globals:isStringNumeric(chew.mobileNumber) == true &&
				chew.isActive == true &&
				SmartChewController:isClientLinkedToSmartChew(chew) == false) {

			SmartChew smart = SmartChew:new();
			smart.client = chew;
			smart.registered = Mez:now();
			smart.invite(chew.mobileNumber);
			smart.save();

			msg = String:concat(name, " has been invited as a SmartChew"); Logger:log(msg); Alerter:alert(msg);

			successfullyProcessed = successfullyProcessed + 1;

		} else {
			msg = String:concat(name, " has been NOT been invited"); Logger:log(msg); Alerter:alert(msg);
		}
	}

	msg = String:concat(successfullyProcessed, " SmartChews invited successfully"); Logger:log(msg); Alerter:alert(msg);
}

