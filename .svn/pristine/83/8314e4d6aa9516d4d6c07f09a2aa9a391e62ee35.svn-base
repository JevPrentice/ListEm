unit SystemOverview;

ConfigurableItem uSelected;

ConfigurableItem[] getAllConfigurableItems(){
	return ConfigurableItem:all();
}

/* ************************************************************************************************ */
/* ************************************************************************************************ */

void init() {
    createConfigurableItems();
}

/* ************************************************************************************************ */
/* ************************************************************************************************ */
 
void fCreateMenuItems_RunOnce(){

	fSaveConfigurableItem("Monitoring","monitoring", 99, 0);
	fSaveConfigurableItem("All SMS Log","allsmslog", 20, 1);
	fSaveConfigurableItem("Scheduled Events","scheduledevents", 21, 2);
    fSaveConfigurableItem("Sub-Topics","topic", 2, 3);
    fSaveConfigurableItem("Sequences","sequence", 3, 4);
    fSaveConfigurableItem("Sequence Order","sequence_order", 4, 5);
    fSaveConfigurableItem("Activities","pattern", 5, 6);
    fSaveConfigurableItem("Activity Order","pattern_order", 6, 7);
    fSaveConfigurableItem("Activity - SMS Pattern Type","pattern_type", 7, 8);
    fSaveConfigurableItem("IVR Activity Mapping Table","IVRMappingTable", 13, 9);
    fSaveConfigurableItem("Message","message", 9, 10);
	fSaveConfigurableItem("Activity Message","pattern_message", 10, 11);
    fSaveConfigurableItem("Activity SMS Types","pattern_type_setups", 8, 12);
    fSaveConfigurableItem("Fixed Messages","fix_messages", 12, 13);
    fSaveConfigurableItem("Program Managers","program_manager", 14, 14);
    fSaveConfigurableItem("Learning Managers","learning_manager", 11, 15);
    // fSaveConfigurableItem("Content Catalogue","content_catalogue", 16, 16);

}

void createConfigurableItems() {

	fUpdateCountConfigurableItems();

}

/* ************************************************************************************************ */
/* ************************************************************************************************ */

ConfigurableItem fGetConfigurableItem(int fi){
	ConfigurableItem[] cIs = ConfigurableItem:equals(functionindexvalue,fi);
	if(cIs.length()>0){
		return cIs.get(0);
	} else {
		return ConfigurableItem:new();
	}
} 

/* ************************************************************************************************ */
/* ************************************************************************************************ */
 
void fSaveConfigurableItem (string description, string resultreturn, int functionindexvalue, int indexvalue){
    ConfigurableItem ci = fGetConfigurableItem(functionindexvalue);
    ci.description = description;
    ci.resultreturn = resultreturn;
    ci.indexvalue = indexvalue;
    ci.functionindexvalue = functionindexvalue;
    ci.save();
}

/* ************************************************************************************************ */
/* ************************************************************************************************ */

string viewItem() {
   
	string resultreturn = "";
    
    int i = uSelected.indexvalue;
    ConfigurableItem[] cIs = ConfigurableItem:equals(indexvalue,i);
    if(cIs.length()>0){
    	ConfigurableItem cI = cIs.get(0);
    	resultreturn = cI.resultreturn;
    }
	return resultreturn;

}

/* ************************************************************************************************ */
/* ************************************************************************************************ */

void fUpdateCountConfigurableItems() {
	
	ConfigurableItem [] result = ConfigurableItem:all();
	
	// iterate over the items and get each one's count
	for(int i = 0; i < result.length(); i++) {
		ConfigurableItem current = result.get(i);

    	if(current.functionindexvalue == 99) {
			// get 'all' monitoring issues
    		current.count = uMonitoring:fCountIssues();

		} else if (current.functionindexvalue == 0) {
			// get 'all' count
			Client [] items = Client:all();
			current.count = items.length();
			
		} else if (current.functionindexvalue == 1) {
			// get 'all' count
			TopicUserSetup [] items = TopicUserSetup:all();
			current.count = items.length();

        } else if (current.functionindexvalue == 2) {
			// get 'all' count
			Topic [] items = Topic:all();
			current.count = items.length();
			
		} else if (current.functionindexvalue == 3) {
			// get 'all' count
			Sequence [] items = Sequence:all();
			current.count = items.length();
    
        } else if (current.functionindexvalue == 4) {
			// get 'all' count
			SequenceOrder [] items = SequenceOrder:all();
			current.count = items.length();
            
		} else if (current.functionindexvalue == 5) {
			// get 'all' count
			Pattern [] items = Pattern:all();
			current.count = items.length();
            
		} else if (current.functionindexvalue == 6) {
			// get 'all' count
			PatternOrder [] items = PatternOrder:all();
			current.count = items.length();
            
		}else if (current.functionindexvalue == 7) {
			// get 'all' count
			PatternTypeTable [] items = PatternTypeTable:all();
			current.count = items.length();
            
		}else if (current.functionindexvalue == 8) {
			// get 'all' count
			PatternType [] items = PatternType:all();
			current.count = items.length();
            
		}else if (current.functionindexvalue == 9) {
			// get 'all' count
			Message [] items = Message:all();
			current.count = items.length();
            
		}else if (current.functionindexvalue == 10) {
			// get 'all' count
			PatternMessageText [] items = PatternMessageText:all();
			current.count = items.length();
            
		} else if (current.functionindexvalue == 11) {
			// get 'all' count
			LearningManager [] items = LearningManager:all();
			current.count = items.length();

        }else if (current.functionindexvalue == 12) {
    		// get 'all' count
			FixMessage [] items = FixMessage:all();
			current.count = items.length();

        }else if (current.functionindexvalue == 13) {
    		// get 'all' count
			IVRMappingTable [] items = IVRMappingTable:all();
			current.count = items.length();
    	}else if (current.functionindexvalue == 20) {
    		// get 'all' count
			AllSMSLog [] items = AllSMSLog:all();
			current.count = items.length();
    	}else if (current.functionindexvalue == 21) {
    		// get 'all' count
			TopicUserSetup [] items = TopicUserSetup:equals(active,2);
			current.count = items.length();
    	}
		current.save();
	}
    
}