unit UserEdit;

ClientGroup group;

Client uClient;
Client uSelectedClient;

ClientDetails uClientDetails;

LanguageKeyObject languageKey;
RoleKeyObject roleKey;

string nav_destination_after_save;

string message;

void init() {

	message = "";

	if (group != null){
		uClient = group.client_chws;
	}
	
	if (uClient == null){
		uClient = Client:new();
		uClient.isActive = true;
		uClient.chatcount = 0;
	} else {
		uClientDetails = uClient.client_details;
		languageKey = uClient.client_LanguageKey;
		roleKey = uClient.client_RoleKey;
	}

	if (uClientDetails == null){
		uClientDetails = ClientDetails:new();	
	}

}

string saveUser(){

	/*if (group == null){
		message = "Please select a group";
		Alerter:alert(message);
		return null;
	}

	if (group != null){
		group.client_chws = uClient; 
	    group.save();
	}*/

	if (languageKey == null){
		message = "Please select a Language";
		Alerter:alert(message);
		return null;
	}

	if (roleKey == null){
		message = "Please select a Role";
		Alerter:alert(message);
		return null;
	}

	if (String:length(uClient.mobileNumber) < 9 || String:length(uClient.mobileNumber) > 12) {
		message = "Please enter an international mobile number between 9 and 12 digits long";
		Alerter:alert(message);
		return null;
	}

	/* roleID 1 = CHV; roleID 2 = CHEW */
	uClient.client_RoleKey = roleKey;
	uClient.roleID = roleKey.roleID;

	uClient.client_LanguageKey = languageKey;

	if (languageKey.languageID == 1){
		uClient.language = LANGUAGE.English;
	} else if (languageKey.languageID == 2){
		uClient.language = LANGUAGE.Swahili;
	}

    uClient.registered = Mez:now();
	uClient.save();

	uIVRIntegration:fScheduleIVRLanguage(uClient, languageKey.languageID);

	uClientDetails.client = uClient;
	uClientDetails.save();

	if (uClient.roleID == 1){
		SmartChew chew = uClient.client_smart_chew;
		if (chew != null){
			chew.removeRole();
			SmartChew:delete(chew);
		}
	}

	if (uClient.roleID == 2){
		SmartChew chew = SmartChew:new();
		chew.client = uClient;
		chew.registered = Mez:now();
		chew.invite(uClient.mobileNumber);
		chew.save();
	}

	return back();

}

string back(){
	if (nav_destination_after_save == "GroupUsers"){
		return "nav_group_users";
	} else if (nav_destination_after_save == "UserManagement"){
		return "nav_user_management";
	} else if (nav_destination_after_save == "UserProfile"){
		return "nav_user_profile";
	} else {
		return "nav_user_management";
	}
}

string addUser(){
	return "navToAddUser";
}

ClientGroup[] getAllClientGroups(){
 	return ClientGroup:all();
}

