unit ClientSummaryView;

ClientGroup csvClientGroup;
Client csvClient;
Client csvClientBox;
string csvProgressMessage;
string csvURL;
bool csvResetClient;
AllSMSLog csvAdHocSMS;

void init(){
    if(csvClientGroup==null){ csvClientGroup = ClientGroup:new(); }
    if(csvAdHocSMS==null){ csvAdHocSMS = AllSMSLog:new(); }
    if(csvClient==null){ csvClient = Client:new(); }
    csvResetClient = false; csvClientBox = csvClient;
    csvAdHocSMS.messageText = "";
    csvProgressMessage = "";
    csvURL = uIVRIntegration:fGetIVRReportURL(csvClient);
    return null;
}

/* ******************************************************************************************** */
/* ******************************************************************************************** */

void fSetVariables(ClientGroup cg, Client c){
    csvClientGroup = cg;
    csvClientBox = c;
    fFilterForClient();
}

/* ******************************************************************************************** */
/* ******************************************************************************************** */

string fGetcsvProgressMessage(Client c){
    string ts = "";
    if (c != null){
        ts = uGetCurrentSchedule:fGetProgressMessage (c, 1); if(ts==null){ts = "";}
    }
    return ts;
}
    
/* ******************************************************************************************** */
/* ******************************************************************************************** */

void fFilterForClient(){
    csvClient = csvClientBox;
    if(csvClient != null){
        init();
        fFilterForClientExec(csvClient);
    }
    return null;
}

void fFilterForClientExec(Client c){
    csvProgressMessage = fGetcsvProgressMessage(c);
    csvURL = uIVRIntegration:fGetIVRReportURL(c);
    return null;
}

void fFilterForGroup(){
    init();
}

/* ******************************************************************************************** */
/* ******************************************************************************************** */

string fReactivateClient(){
    if(csvClient != null){
        if(csvClient.mobileNumber!=null){
            if(csvResetClient == false){
                Mez:alert("clientsummary.reactivatewarning");
                csvResetClient = true;
            } else {
                uResetUsers:fReactivateClient(csvClient);
                csvClient = Client:new();
                init();
            }
        }
    }
    return null;
}

/* ******************************************************************************************** */
/* ******************************************************************************************** */

string sendAdHocSMSIN(){
    if(csvClient != null && csvAdHocSMS!=null){
        if(csvAdHocSMS.messageText=="*"){ csvAdHocSMS.messageText = "*done*ALL"; }
        RecievedSMSHandler:receiveIncomingSms(csvClient.mobileNumber, csvAdHocSMS.messageText);
        csvAdHocSMS.messageText = ""; csvProgressMessage = "";
        init();
    }
    return null;
}

string sendAdHocSMSOUT(){
    if(csvClient != null && csvAdHocSMS!=null){    
        BLUnits:SendSMSToClient(csvClient, csvAdHocSMS.messageText);
        csvAdHocSMS.messageText = ""; csvProgressMessage = "";
    }
    return null;
}

void fSendProgressSMS(){
    if(csvClient != null){
        uGetCurrentSchedule:fsmsCHWProgressTextExec(csvClient);
    }
}

/* ******************************************************************************************** */
/* ******************************************************************************************** */

void fFilterForGroup(){
    init();
}

/* ******************************************************************************************** */
/* ******************************************************************************************** */

Client[] fGetClients(){
    Client[] cs = null;
    if(csvClientGroup == null){
        cs = ClientList:getClients();
    } else if (csvClientGroup.name == null){
        cs = ClientList:getClients();
    } else {
        cs = uPPESummary:fGetAllClientsFromGroup(csvClientGroup);
    }
    return cs;
}

/* ******************************************************************************************** */
/* ******************************************************************************************** */

AllSMSLog[] fgetAllSMSLogsClient(){
    AllSMSLog[] as;
    if(csvClient != null){
        as = AllSMSLog:relationshipIn(allSMSLog_client, csvClient); return as;
    } else {
        return null;
    }
}

ClientSMSQueue[] fGetAllSMSQueueClient(){
    ClientSMSQueue[] sqs;
    if(csvClient != null){
        sqs = ClientSMSQueue:relationshipIn(c_clientsmsqueue, csvClient); return sqs;
    } else {
        return null;
    }
}

TopicHistory[] fGetTopicHistoryClient(){
    TopicHistory[] ths;
    if(csvClient != null){
    ths = TopicHistory:relationshipIn(client_topicHistory, csvClient); return ths;
    } else {
        return null;
    }
}

SequenceHistory[] fGetAllSequenceHistorysClient(){
    SequenceHistory[] shs;
    if(csvClient != null){
        shs = SequenceHistory:relationshipIn(client_sequenceHistory, csvClient); return shs;
    } else {
        return null;
    }
}

PatternHistory[] fGetAllPatternHistorysClient(){
    PatternHistory[] phs;
    if(csvClient != null){
        phs = PatternHistory:relationshipIn(client_patternHistory, csvClient); return phs;
    } else {
        return null;
    }
}