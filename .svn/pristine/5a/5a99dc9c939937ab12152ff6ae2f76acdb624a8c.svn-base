unit uIVRIntegration;

// Return IVR URL
string fGetIVRURLLanguage (Client c, int i){

    string u1 = ConfigTableController:getConfigValueForDesc("AmrefIvrUrl");
    string u2 = String:concat("?User_ID=", c.mobileNumber);
    string u3 = "&Language_ID=";
    string u4 = i;
    string u5 = "&Activity_ID=T0S0A0&Pass_Fail_A=0&Pass_Fail_B=0&Pass_Fail_C=0&Pass_Fail_D=0&Activity_Score=0&Instruction_Code=0&Comment=IVRCreateEditUser";
    string u = String:concat(u1, u2, u3, u4, u5); 
    return u;  
}

/* ************************************************* */
/* ************************************************* */

// Schedule with IVR
void fScheduleIVRLanguage (Client c, int i){
    ScheduleURL s = ScheduleURL:new();
    s.dateTimeStampInserted = Mez:now();
    s.url = fGetIVRURLLanguage(c, i);
    s.dateTimeStampUsed = null;
    s.status = 1;
    s.save();
    //Also check on any save that IVR is available to client
    fScheduleIVRonEdit (c);
}

/* ************************************************* */
/* ************************************************* */

// Return Delete URL
string fGetDeleteURL (Client c, int i){
    string u1 = ConfigTableController:getConfigValueForDesc("AmrefIvrUrl");
    string u2 = String:concat("?User_ID=", c.mobileNumber);
    string u3 = "&Language_ID=";
    string u4 = i;
    string u5 = "&Activity_ID=T0S0A0&Pass_Fail_A=0&Pass_Fail_B=0&Pass_Fail_C=0&Pass_Fail_D=0&Activity_Score=0&Instruction_Code=9&Comment=IVRDeleteUser";
    string u = String:concat(u1, u2, u3, u4, u5); 
    return u;  
}

/* ************************************************* */
/* ************************************************* */

void fDeleteIVRClient (Client c){
    LanguageKeyObject lk = c.client_LanguageKey;

    ScheduleURL s = ScheduleURL:new();
    s.dateTimeStampInserted = Mez:now();
    s.url = fGetDeleteURL(c, lk.languageID);
    s.dateTimeStampUsed = null;
    s.status = 1;
    s.save();    

}

/* ************************************************* */
/* ************************************************* */

// Return Delete URL
string fGetForceEndURL (Client c, int i){
    string u1 = ConfigTableController:getConfigValueForDesc("AmrefIvrUrl");
    string u2 = String:concat("?User_ID=", c.mobileNumber);
    string u3 = "&Language_ID=";
    string u4 = i;
    string u5 = "&Activity_ID=T0S0A0&Pass_Fail_A=0&Pass_Fail_B=0&Pass_Fail_C=0&Pass_Fail_D=0&Activity_Score=0&Instruction_Code=10&Comment=IVRForceEndFromHelium";
    string u = String:concat(u1, u2, u3, u4, u5); 
    return u;  
}

/* ************************************************* */
/* ************************************************* */

void fScheduleForceEndURL (Client c){
    LanguageKeyObject lk = c.client_LanguageKey;

    ScheduleURL s = ScheduleURL:new();
    s.dateTimeStampInserted = Mez:now();
    s.url = fGetForceEndURL(c, lk.languageID);
    s.dateTimeStampUsed = null;
    s.status = 1;
    s.save();    

}

/* ************************************************* */
/* ************************************************* */

// Return IVR URL
string fGetIVRReportURL (Client c){
    string u = "";
    if(c!=null){
        if(c.mobileNumber!=null){

            string url;

            string isLive = ConfigTableController:getConfigValueForDesc("isLiveEnvironment");
            if (isLive == "1"){
                url = ConfigTableController:getConfigValueForDesc("AmrefIvrUrl");
            } else {
                url = ConfigTableController:getConfigValueForDesc("AmrefIvrTestUrl");
            }

            string u1 = url;
            string u2 = String:concat("?User_ID=", c.mobileNumber);
            string u3 = "&Language_ID=0&Activity_ID=";
            string u4 = "0";
            string u5 = "&Pass_Fail_A=0&Pass_Fail_B=0&Pass_Fail_C=0&Pass_Fail_D=0&Activity_Score=0&Instruction_Code=1&Comment=CheckFromWebURL";
            u = String:concat(u1, u2, u3, u4, u5); 
        }
    }
    return u;
}

/* ************************************************* */
/* ************************************************* */

// Return IVR URL
string fGetIVRScheduleURL (Pattern p, Client c, int i, int iKey, string aID){

    string uComment = "IVRUpdateSchedule"; string u ="";

    if(iKey==1&&i==10){ uComment = fTranslateActivityID(aID, c, "out"); }

    string u1 = ConfigTableController:getConfigValueForDesc("AmrefIvrUrl");
    string u2 = String:concat("?User_ID=", c.mobileNumber);
    string u3 = "&Language_ID=0&Activity_ID=";
    string u4 = fTranslateActivityID(p.patternID, c, "out");
    string u5 = "&Pass_Fail_A=0&Pass_Fail_B=0&Pass_Fail_C=0&Pass_Fail_D=0&Activity_Score=";
    string u6 = iKey;
    string u7 = "&Instruction_Code=";
    string u8 = i;
    string u9 = "&Comment=";
    string u10 = uComment;

    if(u4==null){ u4 = ""; }

    u = String:concat(u1, u2, u3, u4, u5, u6, u7, u8, u9, u10); 
    
    return u;  
}

/* ************************************************* */
/* ************************************************* */

string fTranslateActivityID(string pid, Client c, string tc){
    string rs; IVRMappingTable[] imts; IVRMappingTable imt;
    
    pid = String:upper(pid); rs = pid; //default
    
    Pattern[] psout = Pattern:equals(patternID, pid); Pattern pout; Pattern pin;
    
    LanguageKeyObject lo = c.client_LanguageKey;
    
    if(lo != null) {
        
        int l = lo.languageID;
        
        if(tc=="out"){
            if(psout.length()>0){
                pout = psout.get(0);
                imts = IVRMappingTable:relationshipIn(ivrmappingtable_pattern,pout);
                if(imts.length()!=0){
                    imt = imts.get(0);
                    rs = imt.ivractivityid;
                    if(rs==null||rs==""){ rs = "undefined"; }
                }
            } else {
                rs = pid;                
            }
        } else if (tc=="in"){
            imts = IVRMappingTable:and(equals(languageid, l),equals(ivractivityid, pid));
            if(imts.length()!=0){
                imt = imts.get(0);
                pin = imt.ivrmappingtable_pattern;
                rs = pin.patternID;
            } else {
                Mez:log(String:concat("Translate activity. In. Unknown : ", pid));
            }
        } else
        {
            rs = pid;
        }
    }
    return rs;
}

/* ************************************************* */
/* ************************************************* */

// Schedule with IVR
void fScheduleIVR (Pattern p, Client c, int i, string aID){

    int iKey = 0; if(aID!=""){ iKey = 1; }

    ScheduleURL s = ScheduleURL:new();
    s.dateTimeStampInserted = Mez:now();
    s.url = fGetIVRScheduleURL(p, c, i, iKey, aID);
    s.dateTimeStampUsed = null;
    s.status = 1;
    s.save();
}

/* ************************************************* */
/* ************************************************* */

// Schedule with IVR
void fScheduleIVRonEdit (Client c){

    string aID="";
    Pattern p = uGetCurrentSchedule:fGetCurrentPattern(c);
    Sequence s = uGetCurrentSchedule:fGetCurrentSequence(c);

    if (p!=null&&s!=null){

        /* JP HEL-178 */
        int channelID = ActivityController:getActivityChannelKeyID(p);
        if (channelID == 3){
            aID = uGetNextSequence:fIsNextPatternIVR(c, s);
            fScheduleIVR (p, c, 10, aID);
        }
        
    } else {
        return null;
    }

}
