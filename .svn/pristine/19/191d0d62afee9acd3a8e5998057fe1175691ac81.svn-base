unit SubTopicEdit;

Umbrella topic;
UmbrellaTopicSetupTable subTopicOrder;

Topic subTopic;
LanguageKeyObject languageKey;

bool isEdit;

int topicReminderTime;
int topicEscalationTime;
int topicMaxDuration;

string subTopicReminderSMS;
string subTopicID;
string msg;
string nav_return;

void init() {

	languageKey = null;
	msg = "";

	topicReminderTime = 3;
	topicEscalationTime = 4;
	topicMaxDuration = 7;

	if (subTopic == null){
		subTopic = Topic:new();
		isEdit = false;

		if (topic != null){
			subTopicID = topic.umbrellaID;
		}

		/* #378 */
		subTopicReminderSMS = FixMessageController:getFixMessageTextFor_messageId_langId("DefaultTopicReminder", 1);

	} else {
		isEdit = true;

		languageKey = subTopic.topic_LanguageKey;

		topicReminderTime = subTopic.topicReminderTime;
		topicEscalationTime = subTopic.topicEscalationTime;
		topicMaxDuration = subTopic.topicMaxDuration;
		subTopicReminderSMS = subTopic.topicReminderSMS;

		subTopicID = subTopic.topicID;
	}    

	if (nav_return == null || nav_return == ""){
		nav_return = "nav_sub_topic_management";
	}
}

void resetVars(){
	msg = "";
	subTopic = null;
	topic = null;
	subTopicOrder = null;
	languageKey = null;
	subTopicID = null;
}

string navigate(){
	resetVars();
	return nav_return;
}

bool saveSubTopic(){

	if (subTopic == null){
		msg = "Sub-Topic not found";
        Alerter:alertError(msg);
        return false;
	}

	if (subTopicID == null || String:length(subTopicID) <= 0){
		msg = "Please enter a Sub-Topic ID";
        Alerter:alertError(msg);
        return false;
	}

	// if (topic != null){
	// 	if (subTopicID == topic.umbrellaID){
	// 		msg = "Sub-Topic ID has not been changed from the TopicID";
	// 		Alerter:alert(msg);
	// 		return false;
	// 	}
	// }

	if(languageKey == null){
        msg = "Please select a language for the Sub-Topic";
        Alerter:alertError(msg);
        return false;
    }

    if(topicReminderTime == null || topicReminderTime < 0){
        msg = "Please enter a (Positive and Numeric) Reminder Time";
        Alerter:alertError(msg);
        return false;
    }

	if(topicEscalationTime == null || topicReminderTime < 0){
        msg = "Please enter a (Positive and Numeric) Escalation Time";
        Alerter:alertError(msg);
        return false;
    }

    if(topicMaxDuration == null || topicReminderTime < 0){
        msg = "Please enter a (Positive and Numeric) Max Duration";
        Alerter:alertError(msg);
        return false;
    }

    /* #378 */
    if (subTopicReminderSMS == null || String:length(subTopicReminderSMS) <= 0){
    	msg = "Please enter a Reminder SMS";
        Alerter:alertError(msg);
        return false;
    }

    subTopicID = String:upper(subTopicID);

    Umbrella[] topics = TopicController:getTopicsForTopicID(subTopicID);
	if (topics.length() > 0){
		msg = "The SubTopic ID is the same as an existing Topic ID, Please ensure that the ID is unique";
		Alerter:alertError(msg);
		return false;
	}

    Topic[] subTopics = SubTopicController:getSubTopicsForTopicID(subTopicID);
    if (subTopics.length() >= 1){

		if (isEdit == true){
			if (subTopic.topicID != subTopicID){
				msg = String:concat("SubTopic ID ", subTopicID, " already exists, please ensure that the SubTopic ID is unique, SubTopic NOT updated" );
				Alerter:alertError(msg);
				return false;
			}
		} else {
			msg = String:concat("SubTopic ID ", subTopicID, " already exists, please ensure that the SubTopic ID is unique, SubTopic NOT saved");
			Alerter:alertError(msg);
			return false;
		}
	}

	subTopic.topicReminderSMS = subTopicReminderSMS; /* #378 */
	subTopic.topicID = subTopicID;
    subTopic.topic_LanguageKey = languageKey;
    subTopic.topicReminderTime = topicReminderTime;
	subTopic.topicEscalationTime = topicEscalationTime;
	subTopic.topicMaxDuration = topicMaxDuration;
    
	subTopic.save();

	msg = String:concat("Sub-Topic ", subTopic.topicID ," saved");
    Alerter:alert(msg);

	return true;
}

string saveSubTopicButton(){
	if (saveSubTopic() == false){
		return null;
	}
	
	return navigate();
}

string saveSubTopicCreateOrderButton(){
	if (saveSubTopic() == false){
		return null;
	}
	nav_return = "nav_sub_topic_order_edit";
	SubTopicOrderEdit:subTopicOrder = subTopicOrder;
	SubTopicOrderEdit:topic = topic;
	SubTopicOrderEdit:subTopic = subTopic;
	return navigate();
}

void generateDefaults(){

	if(languageKey == null){
        msg = "Please select a language for the Sub-Topic";
        Alerter:alertError(msg);
        return null;
    }

	subTopicReminderSMS = FixMessageController:getFixMessageTextFor_messageId_langId("DefaultTopicReminder", languageKey.languageID);

}