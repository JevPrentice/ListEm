set search_path to sandboxed_help_001;

------------------------------------------------------------------------------------------------------------------------------------------------------

DROP TABLE vsubtopicsource;
DROP TABLE vTopicsource;
DROP TABLE vAll;
DROP TABLE vSummaryTopic;
DROP TABLE vSummaryGroupTopicSource;
DROP TABLE vSummaryGroupTopicDisplay;


DROP VIEW vSummaryGroupTopicDisplay;
DROP VIEW vSummaryGroupTopicSource;
DROP VIEW vSummaryTopic;
DROP VIEW vAll;
DROP VIEW vTopicsource;
DROP VIEW vsubtopicsource;






------------------------------------------------------------------------------------------------------------------------------------------------------


CREATE OR REPLACE VIEW vsubtopicsource AS (
select 	2 as reportorder,
'subtopiclevel'::text as summarylevel, 
u.umbrellaid as topicid,
t._id_ as _id_,
t.topicid as subtopicid,
t.topictype as subtopictype, 
cg.name as groupname,
c.firstname, c.surname, c.mobilenumber,   
th.startdate, 
th.actualenddate as enddate, 
th.statusid::text,
(th.actualenddate::date - th.startdate::date)::integer as duration,
(case 	when (th.statusid is null) then 'Scheduled'::text
when (sko.statusdescription is null) then 'Undefined'::text
else sko.statusdescription end) as statusdescription,
(case when th.statusid=99 then 100 else 0 end) as progress,
null::int as quizscore,
null::int as chatcount,
null::int as chatscore,
null::int as practicumscore,
null::int as totalscore
from (select distinct umbrella_topicusersetup_fk, topic_topicusersetup_fk, client_topicusersetup_fk from topicusersetup where runtype = 1) tus
join client c on tus.client_topicusersetup_fk = c._id_
left join clientgroup cg on c.group_fk = cg._id_
left join umbrella u on tus.umbrella_topicusersetup_fk = u._id_
left join topic t on tus.topic_topicusersetup_fk = t._id_
left join topichistory th on (tus.topic_topicusersetup_fk = th.topic_topichistory_fk and tus.client_topicusersetup_fk = th.client_topichistory_fk)
left join statuskeyobject sko on th.statusid = sko.statusid
where 	( (t.topictype <=10) and (u.umbrellaid is not null) and (lower(cg.name) not like '%nr%') )
);


------------------------------------------------------------------------------------------------------------------------------------------------------


CREATE OR REPLACE VIEW vTopicsource as (
select	1 as reportorder,
'topiclevel'::text as summarylevel,
u.umbrellaid as topicid,
u._id_ as _id_,
null::text as subtopicid,
null::int as subtopictype,
cg.name as groupname,
c.firstname, c.surname, c.mobilenumber,
uppe.umbrellastartdatetime as startdate,
(case when (uppe.status<=3) then null else uppe.umbrellaenddatetime end) as enddate,
uppe.status::text as statusid,
uppe.duration,
(case when (sko.statusdescription is null) then 'Undefined'::text else sko.statusdescription end) as statusdescription,
uppe.progress,
uppe.quizscore,
uppe.chatscore as chatcount,
(uppe.totalscore - (uppe.quizscore+uppe.practicumscore)) as chatscore,
uppe.practicumscore,
uppe.totalscore
from umbrellappe uppe
join umbrella u on uppe.umbrella_umbrellappe_fk = u._id_
left join statuskeyobject sko on uppe.status = sko.statusid
join client c on uppe.client_umbrellappe_fk = c._id_
join clientgroup cg on c.group_fk = cg._id_
where 	( (lower(coalesce(u.umbrellaname,'')) not like '%test%') and (lower(coalesce(u.umbrellaname,'')) not like '%search%') and (lower(coalesce(u.umbrellaflags,'')) not like '%nr%') )
and ( (lower(cg.name) not like '%nr%') )
);

------------------------------------------------------------------------------------------------------------------------------------------------------


CREATE OR REPLACE VIEW vAll AS (
select *
from
(
select * from vSubtopicsource
union
select * from vTopicsource
) Q
order by groupname, firstname, surname, topicid, reportorder, startdate asc);

------------------------------------------------------------------------------------------------------------------------------------------------------


CREATE OR REPLACE VIEW vSummaryTopic as (
select 	summarylevel, _id_ ,topicid, groupname, firstname, surname, mobilenumber, startdate, enddate, statusid, 
duration, statusdescription, progress, quizscore, chatcount, chatscore, practicumscore, totalscore
from VAll
where summarylevel='topiclevel'
);

------------------------------------------------------------------------------------------------------------------------------------------------------


CREATE OR REPLACE VIEW vSummaryGroupTopicSource as (
select sQ.*,
(numberactive::decimal/numberenrolled::decimal*100)::int as percentageactive,
(numberlate::decimal/numberenrolled::decimal*100)::int as percentagelate,
(numberexpired::decimal/numberenrolled::decimal*100)::int as percentageexpired,
(numbercompleted::decimal/numberenrolled::decimal*100)::int as percentagecompleted
from
(
select 'grouptopic'::text as summarylevel, 
groupname,
topicid,
_id_,
min(startdate) as groupfirststartdate, 
max(enddate) as grouplastenddate,

count(*)::int as numberenrolled,
sum(case when statusid='1' then 1 else 0 end)::int as numberactive, 
sum(case when statusid='3' then 1 else 0 end)::int as numberlate, 
sum(case when statusid='88' then 1 else 0 end)::int as numberexpired,
sum(case when statusid='99' then 1 else 0 end)::int as numbercompleted,  

avg(duration)::int as averageduration,
avg(progress)::int as averageprogress,
avg(quizscore)::int as averagequizscore,
(avg(quizscore) / 30 * 100)::int as averagequizpercent, /* #364 */
avg(chatcount)::int as averagechatcount, 
avg(chatscore)::int as averagechatscore, 
avg(practicumscore)::int as averagepracticumscore, 
(avg(practicumscore) / 40 * 100)::int as averagepracticumpercent, /* #364 */
avg(totalscore)::int as averagetotalscore

from VSummaryTopic
group by groupname, topicid, _id_
) sQ
order by sQ.groupname, sQ.topicid
);

------------------------------------------------------------------------------------------------------------------------------------------------------


CREATE OR REPLACE VIEW vSummaryGroupTopicDisplay as (
select summarylevel::text as summarylevel, groupname, topicid, _id_, groupfirststartdate, grouplastenddate, 
percentageactive, percentagelate, percentageexpired, percentagecompleted,
averageduration, averageprogress, averagequizscore, averagequizpercent, averagechatcount, averagechatscore, 
averagepracticumscore, averagepracticumpercent, averagetotalscore
from vSummaryGroupTopicSource
);

------------------------------------------------------------------------------------------------------------------------------------------------------


--ALTER VIEW vall OWNER TO reporter_sandboxed_help_001;
--ALTER VIEW vsubtopicsource OWNER TO reporter_sandboxed_help_001;
--ALTER VIEW vTopicsource OWNER TO reporter_sandboxed_help_001;
--ALTER VIEW vSummaryGroupTopicSource OWNER TO reporter_sandboxed_help_001;
--ALTER VIEW vSummaryGroupTopicDisplay OWNER TO reporter_sandboxed_help_001;
--ALTER VIEW vsummarytopic OWNER TO reporter_sandboxed_help_001;

------------------------------------------------------------------------------------------------------------------------------------------------------


--GRANT SELECT ON vall to helium;
--GRANT SELECT ON vsubtopicsource to helium;
--GRANT SELECT ON vsummarygrouptopicdisplay to helium;
--GRANT SELECT ON vsummarygrouptopicsource to helium;
--GRANT SELECT ON vsummarytopic to helium;
--GRANT SELECT ON vtopicsource to helium;

--HELP PROD
GRANT SELECT ON vall to reporter_sandboxed_help_003;
GRANT SELECT ON vsubtopicsource to reporter_sandboxed_help_003;
GRANT SELECT ON vsummarygrouptopicdisplay to reporter_sandboxed_help_003;
GRANT SELECT ON vsummarygrouptopicsource to reporter_sandboxed_help_003;
GRANT SELECT ON vsummarytopic to reporter_sandboxed_help_003;
GRANT SELECT ON vtopicsource to reporter_sandboxed_help_003;


--HELP PREPROD
-- GRANT SELECT ON vall to reporter_help20150203_001;
-- GRANT SELECT ON vsubtopicsource to reporter_help20150203_001;
-- GRANT SELECT ON vsummarygrouptopicdisplay to reporter_help20150203_001;
-- GRANT SELECT ON vsummarygrouptopicsource to reporter_help20150203_001;
-- GRANT SELECT ON vsummarytopic to reporter_help20150203_001;
-- GRANT SELECT ON vtopicsource to reporter_help20150203_001;

--HELP PROD
--GRANT SELECT ON vall to reporter_help_002;
--GRANT SELECT ON vsubtopicsource to reporter_help_002;
--GRANT SELECT ON vsummarygrouptopicdisplay to reporter_help_002;
--GRANT SELECT ON vsummarygrouptopicsource to reporter_help_002;
--GRANT SELECT ON vsummarytopic to reporter_help_002;
--GRANT SELECT ON vtopicsource to reporter_help_002;


------------------------------------------------------------------------------------------------------------------------------------------------------



