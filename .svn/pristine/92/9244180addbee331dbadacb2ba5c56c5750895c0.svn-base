unit PharmacistList;

Pharmacist pmct;
Pharmacy pharmacy;
CareReceiver uCareReceiver;
CareReceiver editCareReceiver;
CareReceiver deleteCareReceiver;
string uCallBackOutcome;

void init(){
    pmct = Pharmacist:new();
    uCareReceiver = CareReceiver:new();
    Pharmacist pharmacist = Pharmacist:user(); 
	pharmacy = pharmacist.pharmacist_pharmacy;
}

void setup(Pharmacist p, string callbackoutcome){
	pmct = p;
	uCallBackOutcome = callbackoutcome;
}

Pharmacist[] getPharmacists(){
    return Pharmacist:all();
}

string submitInvite(){
	
	pmct.registered = Mez:now();
    pmct.roleID = 7;
    pmct.deleted = "no";
    pmct.save();
    init();
    Mez:alert("pmct.pmctList.submitInviteAlert");
    return null;
}

string addCareReceiver(){
	CareReceiverList:setup(pmct, "PharmacistForm");
	return "CareReceiverListForm";
}

string editCareReceiver(){
	CareReceiverList:setup(Pharmacist:user(), "PharmacistForm");
	return "CareReceiverListForm";
}

string  removeCareReceiver(){
	if( uCareReceiver.deleted == "no"){ //(uCareReceiver.status == 1) &&
		uCareReceiver.deleted ="yes";
		uCareReceiver.careReceiver_pharmacy = null;
		uCareReceiver.save();
		Mez:alert("pmct.pmctList.removeAlert");
	}
	init();
	return "PharmacistForm";
}
string viewCareReceiver(){
	setup(Pharmacist:user(), "PharmacistForm");
	return "viewCareReceiverListForm";
}
string goBack(){
	return uCallBackOutcome;
}

CareReceiver[] getCareReceivers(){
	Pharmacist pharmacist = Pharmacist:user(); 
	pharmacy =pharmacist.pharmacist_pharmacy;
	return CareReceiver:and(relationshipIn(careReceiver_pharmacy, pharmacist.pharmacist_pharmacy), equals(deleted, "no"));
}