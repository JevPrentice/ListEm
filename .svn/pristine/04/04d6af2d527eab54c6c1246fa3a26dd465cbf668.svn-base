unit ActivityHistoryController;

PatternHistory[] getAllActivityHistoryForUser(Client uClient, bool bShowAll){
    PatternHistory[] phs; Sequence s;

    if(bShowAll == true){
    	//Return ALL PatternHistory for user
        phs = PatternHistory:relationshipIn(client_patternHistory, uClient);
    } else {
    	//Return for PatternHistory current sequence of user
        s = uGetCurrentSchedule:fGetCurrentSequence(uClient);
        phs = PatternHistory:and(
            relationshipIn(client_patternHistory, uClient),
            relationshipIn(sequence_patternHistory,s)
        );
    }

    return phs;
}

int countPatternHistoryArrElementsForChannelID(PatternHistory[] phArr, int channelID){

	int count = 0;

	PatternHistory ph;
	for (int i = 0; i < phArr.length(); i++){
		ph = phArr.get(i);
		Pattern p = ph.pattern_patternHistory;
		if (p != null){
			ChannelKeyObject cko = p.PatternChannelKey;
			if (cko.patternChannelID == channelID){
				count++;			
			}
		} else {
			Logger:log(String:concat("Warning: PatternHistory uuid=", ph, " has no Pattern FK"));
		}
	}

	return count;
}

int countActiveIvrSessions(){
	PatternHistory[] phArr = PatternHistory:equals(statusID, 1);
	return countPatternHistoryArrElementsForChannelID(phArr, 3);
}
	
int countIvrSessionsStartedLastHour(){

	datetime oneHourAgo = Date:addSeconds(Mez:now(), -3600);

	PatternHistory[] phArr = PatternHistory:and(
		equals(statusID, 1),
		greaterThan(startDate, oneHourAgo)

	);

	return countPatternHistoryArrElementsForChannelID(phArr, 3);
}

int countIvrSessionsCompletedLastHour(){

	datetime oneHourAgo = Date:addSeconds(Mez:now(), -3600);

	PatternHistory[] phArr = PatternHistory:and(
		equals(statusID, 1),
		greaterThan(actualEndDate, oneHourAgo)
	);

	return countPatternHistoryArrElementsForChannelID(phArr, 3);

}

int countSmsActiveSessions(){
	PatternHistory[] phArr = PatternHistory:equals(statusID, 1);
	return countPatternHistoryArrElementsForChannelID(phArr, 1);
}

int countSmsSentLastHour(){
	datetime oneHourAgo = Date:addSeconds(Mez:now(), -3600);
	AllSMSLog[] smsArr = AllSMSLog:and(
		greaterThan(dateTimeStamp, oneHourAgo),
		equals(direction, "MT")
	);
	return smsArr.length();
}

int countSmsRecievedLastHour(){
	datetime oneHourAgo = Date:addSeconds(Mez:now(), -3600);
	AllSMSLog[] smsArr = AllSMSLog:and(
		greaterThan(dateTimeStamp, oneHourAgo),
		equals(direction, "MO")
	);
	return smsArr.length();
}

int countSmsSessionsStartedLastHour(){
	datetime oneHourAgo = Date:addSeconds(Mez:now(), -3600);
	PatternHistory[] phArr = PatternHistory:and(
		equals(statusID, 1),
		greaterThan(startDate, oneHourAgo)

	);
	return countPatternHistoryArrElementsForChannelID(phArr, 1);
}

int countSmsSessionsEndedLastHour(){
	datetime oneHourAgo = Date:addSeconds(Mez:now(), -3600);

	PatternHistory[] phArr = PatternHistory:and(
		equals(statusID, 1),
		greaterThan(actualEndDate, oneHourAgo)
	);

	return countPatternHistoryArrElementsForChannelID(phArr, 3);
}