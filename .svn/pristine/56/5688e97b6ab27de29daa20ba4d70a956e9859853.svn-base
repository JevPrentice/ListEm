unit ActivityOrderTempController;

ActivityOrderTemp[] getActivityOrderTempFromPatternOrderArr(PatternOrder[] patternOrders){
	ActivityOrderTemp[] activityOrdersTemp;

	PatternOrder po;
    ActivityOrderTemp temp;

    for(int i = 0; i < patternOrders.length(); i++){
        po = patternOrders.get(i);

        temp = ActivityOrderTemp:new();

        Pattern p = po.pattern_patternOrder;
        Sequence s = po.sequence_patternOrder;

        if (p != null){
            ChannelKeyObject cko = p.PatternChannelKey;
            temp.activity_id = p.patternID;
            temp.activity_order = po.patternOrder;
            if (cko != null){
                temp.activity_channel = String:concat(cko.patternChannelID, " ", cko.patternChannelDescription);
            } else {
                temp.activity_channel = "";
            }

            temp.ivr_string = p.patternIVRstring;
            temp.ivr_length_sec = p.ivr_length_sec;
            temp.activity_type = ActivityTypeController:getActivityTypeID(p);
            temp.first_sms = p.patternStartSMS;
        }

        if (s != null){
            temp.sequence_id = s.sequenceID;
        }

        activityOrdersTemp.append(temp);
    }

    return activityOrdersTemp;
}