unit MessageManagement;

Message o_message;

string message;
string nav_return;

void init() {
	
	if (o_message == null){
		o_message = Message:new();	
	}

	if (nav_return == null){
		nav_return = "nav_message_order_management";
	}
	
}

string editMessage() {
	MessageEdit:nav_return = "nav_message_management";
	MessageEdit:o_message = o_message;
	return "nav_message_edit";
}

void deleteMessage() {

	if (o_message == null){
		message = "Message could not be found";
   		Alerter:alert(message);
		return null;
	}

	PatternMessageText[] messageOrders = MessageOrderController:getMassageOrdersForMessage(o_message);

	if (messageOrders != null){
		if (messageOrders.length() > 0){
			PatternMessageText messageOrder = messageOrders.get(0);
			Pattern activity = messageOrder.patternMessageTextID_pattern;
			message = String:concat("Message cannot be removed because it is associated to the Activity: ", activity.patternID, " through Message Order: ", messageOrder._MTID_order);
			Alerter:alert(message);
			return null;
		}
	}

	Message:delete(o_message);
	message = "Message Deleted";
	Alerter:alert(message);
	return null;	
}

string back(){
	return nav_return;
}

string createMessage(){
	MessageEdit:nav_return = "nav_message_management";
	MessageEdit:o_message = null;
	return "nav_message_edit";
}