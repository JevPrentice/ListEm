unit TopicHistoryList;

TopicHistory topicHistory;

void init() {
    topicHistory = TopicHistory:new();
}

string editTopicHistory() {
	return null;
}

string saveTopicHistory() {
	topicHistory.save();
	return null;
}

string deleteTopicHistory() {
	TopicHistory:delete(topicHistory);
	return null;
}

TopicHistory[] getAllTopicHistorys() {
	return TopicHistory:all();
}

/* ***************************************** */
/* ***************************************** */

void fUpdateTopicHistoryEscalation(Client client, Topic topic, int i){

    TopicHistory tH = TopicList:getLastTopicHistory(client, topic, 0);
    
    if(tH != null) {
		tH.escalationID = i;
        if(i==9){
            tH.escalationTime = Mez:now();
        } else if(i==2){
            tH.reminderTime = Mez:now();
        }
		tH.save();
	}
}