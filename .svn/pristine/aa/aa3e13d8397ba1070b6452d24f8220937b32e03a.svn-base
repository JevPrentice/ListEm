unit BroadcastChvConfig;

ClientGroup selectedGroup;
CHVTEMPLATEMESSAGE templateMessage;
KIT kit;

string smsText;

void init(){
	
	if (selectedGroup == null || templateMessage == null ){
		Alerter:alert("This page is not being used correctly");
		return null;
	}

	if (templateMessage == CHVTEMPLATEMESSAGE.KitsReady ){

		if (kit == null){
			Alerter:alert("This page is not being used correctly, NO Kit selected");
			return null;
		} 

		smsText = String:concat("Dear CHV, Your ", kit ," kit(s) are ready for collection. Please collect from the health facility.");

	} else if (templateMessage == CHVTEMPLATEMESSAGE.SystemDown){
		smsText = String:concat("Dear CHV, the system has been down.", "");
	} else if (templateMessage == CHVTEMPLATEMESSAGE.SystemUp){
		smsText = String:concat("Dear CHV, the system has come back up.", "");
	} else if (templateMessage == CHVTEMPLATEMESSAGE.Blank){
		smsText = "";
	}

}

string navigate(string location){
	return location;
}

string back(){
	return navigate("navBroadcastChv");
}

string send(){

	SmartChew chew = SmartChew:user();

	if (chew == null){
		Alerter:alert("No SmartChew Found");
		return null;
	}

	Client c = chew.client;

	if (c == null){
		Alerter:alert("No Client Found");
		return null;
	}

	if (selectedGroup == null){
		Alerter:alert("No Group Found");
		return null;
	}

	if (smsText == null || String:length(smsText) <= 0){
		Alerter:alert("Please Enter SMS Text");
		return null;
	}

	smsText = String:concat("group ", selectedGroup.name, " ", smsText);

	BLUnits:saveAllSMSLogs(c, smsText, "MO");
    IncomingSMSList:assignIncomingSMS(c, smsText); //updating the incomingSMS table

    string msg = String:concat("Message: - ", smsText, " - sent.");
	Alerter:alert(msg);

	return navigate("navBroadcastMessage");
}
