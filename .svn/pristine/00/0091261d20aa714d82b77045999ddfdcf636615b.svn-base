unit SequenceManagement;

Sequence sequence;

string message;
string nav_return;

void init() {
	message = "";

	if (nav_return == null || nav_return == ""){
		nav_return =  "nav_subtopic_link_sequence_management";
	}
}

string editSequence() {
    SequenceEdit:sequence = sequence;
    return createSequence();
}

string deleteSequence() {

	if (sequence == null){
		message = "Sequence could not be found";
   		Alerter:alert(message);
		return null;
	}

	SequenceOrder[] sequenceOrders = SequenceOrderController:getSequenceOrdersForSequence(sequence);

	if (sequenceOrders != null){
		if (sequenceOrders.length() > 0){
			SequenceOrder sequenceOrder = sequenceOrders.get(0);
			Topic subTopic = sequenceOrder.topic_sequenceOrder;
			message = String:concat("Sequence cannot be removed because it is associated to the Sub-Topic: ", subTopic.topicID, " through SequenceOrder: ", sequenceOrder.sequenceOrder);
			Alerter:alert(message);
			return null;
		}
	}

	PatternOrder[] activityOrders = ActivityOrderController:getActivityOrdersForSequence(sequence);

	if (activityOrders != null){
		if (activityOrders.length() > 0){
			PatternOrder activityOrder = activityOrders.get(0);
			Pattern a = activityOrder.pattern_patternOrder;
			message = String:concat("Sequence cannot be removed because it is associated to the Activity: ", a.patternID, " through ActivityOrder: ", activityOrder.patternOrder);
			Alerter:alert(message);
			return null;
		}
	}

	Sequence:delete(sequence);
	return null;
}

string createSequence(){
	return "nav_edit_create";
}

string back(){
	return nav_return;
}