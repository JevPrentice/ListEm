unit UserManagement;

Client uClient;

string message;

void init() {
	message = "";
}

string add_multiple_users(){
	return "nav_user_bulk_upload";
}

string add_user(){
	UserEdit:uClient = null;
	UserEdit:nav_destination_after_save = "UserManagement";
	return "nav_edit_user";
}

string view_activity(){

	UserActivity:uClient = uClient;
	UserActivity:nav_destination_on_back = "nav_user_management";
	return "nav_user_activty";

}

string view_profile(){

	UserProfile:uClient = uClient;
	UserProfile:nav_destination_on_back = "nav_user_management";
	return "nav_user_profile";

}

string edit_user(){
	UserEdit:uClient = uClient;
	UserEdit:nav_destination_after_save = "UserManagement";
	return "nav_edit_user";
}

void remove_user(){

	if (uClient.group != null){
		message = String:concat("Unable to remove user ", uClient.firstName, " ", uClient.surname, " because they are currently associated to a group. Please unassociate this user from any groups before attempting to remove");
		Alerter:alert(message);
		return null;
	}

	if (uClient.roleID == 2){
		SmartChew chew = uClient.client_smart_chew;
		chew.removeRole();
		SmartChew:delete(chew);
	}

	Client:delete(uClient);

	message = String:concat("User ", uClient.firstName, " ", uClient.surname, " has been removed successfully.");
	Alerter:alert(message);
	
}

