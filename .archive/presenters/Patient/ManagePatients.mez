unit ManagePatients;

Patient[] allPatients;
Patient patient;

string msg;

void init(){
	allPatients = PatientController:getAllPatients();
}

string navigate(string location){
	return location;
}

// string invitePatient(){ 
// 	return navigate("navEditPatient");
// }

string editPatient(){

	Person person = patient.person;

	/* Patient w no person */
	if (person == null){
		EditPatient:patient = patient;
		EditPatient:person = null;
		return navigate("navEditPatient");
	}

	EditPerson:person = person;
	return navigate("navEditPerson");
}

void uninvitePatient(){

	Payment[] payments = patient.patient_payments;
	if (payments.length() > 0){
		msg = "This Patient cannot be removed, they currently have existing payments in the system"; Alert:error(msg);
		return null;
	}

	patient.removeRole();
	Patient:delete(patient);
	
	init();
}
